{
  "componentName": "Button",
  "schema": {
    "schemaObject": {
      "componentName": "Button",
      "props": [
        {
          "name": "children",
          "type": "React.ReactNode",
          "required": false,
          "category": "core"
        },
        {
          "name": "className",
          "type": "string",
          "required": false,
          "category": "core"
        },
        {
          "name": "component",
          "type": "React.ElementType<any> | React.ComponentType<any>",
          "required": false,
          "category": "advanced"
        },
        {
          "name": "isClicked",
          "type": "boolean",
          "required": false,
          "category": "advanced"
        },
        {
          "name": "isBlock",
          "type": "boolean",
          "required": false,
          "category": "advanced"
        },
        {
          "name": "isDisabled",
          "type": "boolean",
          "required": false,
          "category": "advanced"
        },
        {
          "name": "isAriaDisabled",
          "type": "boolean",
          "required": false,
          "category": "advanced"
        },
        {
          "name": "isLoading",
          "type": "boolean",
          "required": false,
          "category": "advanced"
        },
        {
          "name": "spinnerAriaValueText",
          "type": "string",
          "required": false,
          "category": "core"
        },
        {
          "name": "spinnerAriaLabel",
          "type": "string",
          "required": false,
          "category": "core"
        },
        {
          "name": "spinnerAriaLabelledBy",
          "type": "string",
          "required": false,
          "category": "core"
        },
        {
          "name": "inoperableEvents",
          "type": "string[]",
          "required": false,
          "category": "core"
        },
        {
          "name": "isInline",
          "type": "boolean",
          "required": false,
          "category": "advanced"
        },
        {
          "name": "isFavorite",
          "type": "boolean",
          "required": false,
          "category": "advanced"
        },
        {
          "name": "isFavorited",
          "type": "boolean",
          "required": false,
          "category": "advanced"
        },
        {
          "name": "size",
          "type": "'default' | 'sm' | 'lg'",
          "required": false,
          "category": "styling"
        },
        {
          "name": "type",
          "type": "'button' | 'submit' | 'reset'",
          "required": false,
          "category": "core"
        },
        {
          "name": "variant",
          "type": "'primary' | 'secondary' | 'tertiary' | 'danger' | 'warning' | 'link' | 'plain' | 'control' | 'stateful'",
          "required": false,
          "category": "styling"
        },
        {
          "name": "state",
          "type": "'read' | 'unread' | 'attention'",
          "required": false,
          "category": "core"
        },
        {
          "name": "hasNoPadding",
          "type": "boolean",
          "required": false,
          "category": "advanced"
        },
        {
          "name": "iconPosition",
          "type": "'start' | 'end' | 'left' | 'right'",
          "required": false,
          "category": "core"
        },
        {
          "name": "'aria-label'",
          "type": "string",
          "required": false,
          "category": "accessibility"
        },
        {
          "name": "icon",
          "type": "React.ReactNode | null",
          "required": false,
          "category": "advanced"
        },
        {
          "name": "tabIndex",
          "type": "number",
          "required": false,
          "category": "accessibility"
        },
        {
          "name": "isDanger",
          "type": "boolean",
          "required": false,
          "category": "advanced"
        },
        {
          "name": "isExpanded",
          "type": "boolean",
          "required": false,
          "category": "advanced"
        },
        {
          "name": "isSettings",
          "type": "boolean",
          "required": false,
          "category": "advanced"
        },
        {
          "name": "isHamburger",
          "type": "boolean",
          "required": false,
          "category": "advanced"
        },
        {
          "name": "hamburgerVariant",
          "type": "'expand' | 'collapse'",
          "required": false,
          "category": "core"
        },
        {
          "name": "innerRef",
          "type": "React.Ref<any>",
          "required": false,
          "category": "core",
          "description": "Forwarded ref"
        },
        {
          "name": "countOptions",
          "type": "BadgeCountObject",
          "required": false,
          "category": "advanced"
        },
        {
          "name": "ouiaId",
          "type": "number | string",
          "required": false,
          "category": "accessibility"
        },
        {
          "name": "ouiaSafe",
          "type": "boolean",
          "required": false,
          "category": "accessibility"
        }
      ],
      "events": [
        {
          "name": "onClick",
          "signature": "(event: React.MouseEvent<HTMLElement>) => void",
          "description": "Inherited from React.HTMLProps",
          "inherited": true
        },
        {
          "name": "onKeyDown",
          "signature": "(event: React.KeyboardEvent<HTMLElement>) => void",
          "description": "Inherited from React.HTMLProps",
          "inherited": true
        },
        {
          "name": "onKeyUp",
          "signature": "(event: React.KeyboardEvent<HTMLElement>) => void",
          "description": "Inherited from React.HTMLProps",
          "inherited": true
        },
        {
          "name": "onKeyPress",
          "signature": "(event: React.KeyboardEvent<HTMLElement>) => void",
          "description": "Inherited from React.HTMLProps",
          "inherited": true
        },
        {
          "name": "onMouseEnter",
          "signature": "(event: React.MouseEvent<HTMLElement>) => void",
          "description": "Inherited from React.HTMLProps",
          "inherited": true
        },
        {
          "name": "onMouseLeave",
          "signature": "(event: React.MouseEvent<HTMLElement>) => void",
          "description": "Inherited from React.HTMLProps",
          "inherited": true
        },
        {
          "name": "onFocus",
          "signature": "(event: React.FocusEvent<HTMLElement>) => void",
          "description": "Inherited from React.HTMLProps",
          "inherited": true
        },
        {
          "name": "onBlur",
          "signature": "(event: React.FocusEvent<HTMLElement>) => void",
          "description": "Inherited from React.HTMLProps",
          "inherited": true
        },
        {
          "name": "onChange",
          "signature": "(event: React.ChangeEvent<HTMLElement>) => void",
          "description": "Inherited from React.HTMLProps",
          "inherited": true
        },
        {
          "name": "onSubmit",
          "signature": "(event: React.FormEvent<HTMLElement>) => void",
          "description": "Inherited from React.HTMLProps",
          "inherited": true
        },
        {
          "name": "onLoad",
          "signature": "(event: React.SyntheticEvent<HTMLElement>) => void",
          "description": "Inherited from React.HTMLProps",
          "inherited": true
        },
        {
          "name": "onError",
          "signature": "(event: React.SyntheticEvent<HTMLElement>) => void",
          "description": "Inherited from React.HTMLProps",
          "inherited": true
        }
      ],
      "variants": [
        {
          "name": "ButtonVariant",
          "values": [
            "primary",
            "secondary",
            "tertiary",
            "danger",
            "warning",
            "link",
            "plain",
            "control",
            "stateful"
          ],
          "type": "enum"
        },
        {
          "name": "ButtonType",
          "values": ["button", "submit", "reset"],
          "type": "enum"
        },
        {
          "name": "ButtonSize",
          "values": ["default", "sm", "lg"],
          "type": "enum"
        }
      ],
      "slots": [],
      "accessibility": {}
    },
    "componentModel": {
      "type": "functional",
      "forwardRef": true,
      "hooks": [
        {
          "name": "useOUIAProps",
          "dependencies": []
        }
      ],
      "refs": [],
      "context": [],
      "imports": [
        {
          "source": "react",
          "names": ["forwardRef"],
          "isDefault": false
        },
        {
          "source": "@patternfly/react-styles/css/components/Button/button",
          "names": ["styles"],
          "isDefault": true
        },
        {
          "source": "@patternfly/react-styles",
          "names": ["css"],
          "isDefault": false
        },
        {
          "source": "../Spinner",
          "names": ["Spinner", "spinnerSize"],
          "isDefault": false
        },
        {
          "source": "../../helpers/OUIA/ouia",
          "names": ["useOUIAProps", "OUIAProps"],
          "isDefault": false
        },
        {
          "source": "../Badge",
          "names": ["Badge"],
          "isDefault": false
        },
        {
          "source": "@patternfly/react-icons/dist/esm/icons/star-icon",
          "names": ["StarIcon"],
          "isDefault": true
        },
        {
          "source": "@patternfly/react-icons/dist/esm/icons/outlined-star-icon",
          "names": ["OutlinedStarIcon"],
          "isDefault": true
        },
        {
          "source": "@patternfly/react-icons/dist/esm/icons/cog-icon",
          "names": ["CogIcon"],
          "isDefault": true
        },
        {
          "source": "./hamburgerIcon",
          "names": ["hamburgerIcon"],
          "isDefault": false
        }
      ]
    },
    "stateManagement": {
      "localState": [],
      "contextState": [],
      "effects": [],
      "derivedState": []
    },
    "metadata": {
      "sourceFile": "/Users/mnolting/Web/patternfly-react/packages/react-core/src/components/Button/Button.tsx",
      "extractedAt": "2025-10-21T15:09:25.759Z",
      "version": "1.0.0",
      "validation": {
        "isValid": true,
        "errors": [],
        "warnings": []
      }
    }
  },
  "metadata": {
    "extractedAt": "2025-10-21T15:09:25.759Z",
    "sourceFile": "/Users/mnolting/Web/patternfly-react/packages/react-core/src/components/Button/Button.tsx",
    "version": "1.0.0"
  }
}
